给你一个日志数组 `logs`。每条日志都是以空格分隔的字串，其第一个字为字母与数字混合的 **标识符** 。

有两种不同类型的日志：

- **字母日志**：除标识符之外，所有字均由小写字母组成
- **数字日志**：除标识符之外，所有字均由数字组成

请按下述规则将日志重新排序：

- 所有 **字母日志** 都排在 **数字日志** 之前。
- **字母日志** 在内容不同时，忽略标识符后，按内容字母顺序排序；在内容相同时，按标识符排序。
- **数字日志** 应该保留原来的相对顺序。

返回日志的最终顺序。

class Solution {
    public String[] reorderLogFiles(String[] logs) {
        Comparator<String> comparator = new Comparator<>() {
            @Override
            public int compare(String a, String b) {
                int indexA = a.indexOf(' ') + 1;
                int indexB = b.indexOf(' ') + 1;
                char charA = a.charAt(indexA);
                char charB = b.charAt(indexB);
                boolean isDigitA = Character.isDigit(charA);
                boolean isDigitB = Character.isDigit(charB);
                if (!isDigitA && !isDigitB) { // 如果都是字母日志
                    int contentCompare = a.substring(indexA).compareTo(b.substring(indexB));
                    return contentCompare != 0 ? contentCompare : a.compareTo(b);
                }
                return isDigitA ? (isDigitB ? 0 : 1) : -1;
            }
        };
        Arrays.sort(logs, comparator);
        return logs;
    }
}
